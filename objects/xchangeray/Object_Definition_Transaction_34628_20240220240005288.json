{"enableComments":false,"objectRelationships":[],"enableCategorization":false,"accountEntryRestrictedObjectFieldName":"","objectActions":[{"conditionExpression":"","objectActionExecutorKey":"groovy","errorMessage":{},"active":true,"description":"","label":{"en_US":"Process Transaction"},"externalReferenceCode":"a2be850d-6782-7ff7-0289-34ce609f0071","system":false,"objectActionTriggerKey":"onAfterAdd","name":"processTransaction","parameters":{"script":"package com.liferay.xchangeray.objects.transaction\n\nimport java.security.KeyFactory\nimport java.security.NoSuchAlgorithmException\nimport java.security.PrivateKey\nimport java.security.Signature\nimport java.security.spec.InvalidKeySpecException\nimport java.security.spec.PKCS8EncodedKeySpec\n\nimport javax.json.Json\nimport javax.json.JsonObject\n\nimport org.apache.http.HttpEntity\nimport org.apache.http.HttpResponse\nimport org.apache.http.client.HttpClient\nimport org.apache.http.client.methods.HttpPost\nimport org.apache.http.entity.StringEntity\nimport org.apache.http.impl.client.HttpClientBuilder\nimport org.apache.http.util.EntityUtils\n\nimport com.liferay.object.service.ObjectEntryLocalServiceUtil\nimport com.liferay.portal.kernel.service.ServiceContext\n\n\n// Create Wallet and Transaction objects\nWallet wallet = new Wallet(r_wallet_c_walletId)\nTransaction transaction = new Transaction(toAddress, amount, wallet)\n\n// Sign the transaction\ntransaction.sign()\n\n// Update the object entry with the new signature\ndef userId = Long.valueOf(creator)\nObjectEntryLocalServiceUtil.updateObjectEntry(userId, id, [signature: transaction.signature], new ServiceContext())\n\n// send the transaction to RayCoin\ntransaction.sendToBlockchain(\"http://raycoin.local:8080/o/c/transactions/\")\n\nclass Transaction {\n\n\tdef toAddress\n\tdef amount\n\tWallet wallet\n\tdef transactionData\n\tdef signature\n\n\tTransaction(toAddress, amount, wallet) {\n\t\tthis.toAddress = toAddress\n\t\tthis.amount = amount\n\t\tthis.wallet = wallet\n\t\tthis.transactionData = \"${this.wallet.publicKey}${toAddress}${amount}\"\n\t}\n\n\tString getSignature() {\n\t\treturn signature\n\t}\n\n\tvoid sign() {\n\t\tPrivateKey privateKey = stringToPrivateKey(wallet.privateKey)\n\t\tbyte[] signedMessage = sign(transactionData, privateKey)\n\t\tsignature = Base64.getEncoder().encodeToString(signedMessage)\n\t}\n\n\tbyte[] sign(String data, PrivateKey privateKey) {\n\t\tdef signatureInstance = Signature.getInstance(\"SHA256withECDSA\")\n\t\tsignatureInstance.initSign(privateKey)\n\t\tsignatureInstance.update(data.bytes)\n\t\treturn signatureInstance.sign()\n\t}\n\n\tPrivateKey stringToPrivateKey(String privateKeyAsString) throws NoSuchAlgorithmException, InvalidKeySpecException {\n\t\tbyte[] privateKeyBytes = Base64.decoder.decode(privateKeyAsString)\n\t\tKeyFactory kf = KeyFactory.getInstance(\"EC\")\n\t\tPKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(privateKeyBytes)\n\t\treturn kf.generatePrivate(keySpec)\n\t}\n\n\tvoid sendToBlockchain(postUrl) {\n\n\t\tJsonObject jsonParams = Json.createObjectBuilder()\n\t\t\t\t.add(\"fromAddress\", this.wallet.publicKey)\n\t\t\t\t.add(\"toAddress\", toAddress)\n\t\t\t\t.add(\"amount\", amount)\n\t\t\t\t.add(\"signature\", signature)\n\t\t\t\t.add(\"signatureValid\", true)\n\t\t\t\t.add(\"transactionData\", transactionData)\n\t\t\t\t.add(\"transactionStatus\", \"pending\")\n\t\t\t\t.build()\n\n\t\tString json = jsonParams.toString()\n\n\t\tHttpPost httpPost = new HttpPost(postUrl)\n\n\t\thttpPost.setHeader('Content-Type', 'application/json')\n\t\thttpPost.setEntity(new StringEntity(json))\n\n\t\tHttpClient httpClient = HttpClientBuilder.create().build()\n\n\t\tHttpResponse httpResponse = httpClient.execute(httpPost)\n\t\tint statusCode = httpResponse.getStatusLine().getStatusCode()\n\t\tHttpEntity httpEntity = httpResponse.getEntity()\n\n\t\tif (statusCode == 200) {\n\n\t\t\tString postResponseBody = EntityUtils.toString(httpResponse.getEntity())\n\t\t\tdef rayCoinTransaction = Json.createReader(new StringReader(postResponseBody)).readObject()\n\t\t\tdef rayCoinTransactionId = rayCoinTransaction.getJsonNumber(\"id\").longValue()\n\n\t\t\tprintln 'Transaction with id' + rayCoinTransactionId + ' registered successfully'\n\t\t} else {\n\n\t\t\tString responseBody = EntityUtils.toString(httpEntity)\n\t\t\tJsonObject responseJson = Json.createReader(new StringReader(responseBody)).readObject()\n\t\t\tString errorMessage = responseJson.containsKey('error') ? responseJson.getString('error') : 'Unknow error sending transaction to blockchain'\n\n\t\t\tprintln \"Error code (HTTP $statusCode), message: $errorMessage\"\n\t\t}\n\t}\n}\n\nclass Wallet {\n\n\tdef privateKey\n\tdef publicKey\n\n\tWallet(walletId) {\n\t\tdef objEntry = ObjectEntryLocalServiceUtil.getObjectEntry(walletId)\n\t\tthis.privateKey = objEntry.getValues().get(\"privateKey\")\n\t\tthis.publicKey = objEntry.getValues().get(\"publicKey\")\n\t}\n\n\tString getPrivateKey() {\n\t\treturn privateKey\n\t}\n\n\tString getPublicKey() {\n\t\treturn publicKey\n\t}\n}"},"status":{"label_i18n":"Success","code":1,"label":"success"}}],"enableLocalization":false,"accountEntryRestricted":false,"externalReferenceCode":"0be80a07-3b88-aa89-0028-da18eea4d7e3","objectFields":[{"indexed":false,"localized":false,"objectFieldSettings":[],"readOnly":"true","DBType":"String","label":{"en_US":"Author"},"type":"String","required":false,"externalReferenceCode":"8b60e63d-c173-4326-fb6a-aa277cd94faa","indexedAsKeyword":false,"system":true,"indexedLanguageId":"","unique":false,"name":"creator","state":false,"businessType":"Text","readOnlyConditionExpression":""},{"indexed":false,"localized":false,"objectFieldSettings":[],"readOnly":"true","DBType":"Date","label":{"en_US":"Create Date"},"type":"Date","required":false,"externalReferenceCode":"9c804b6d-efb7-9195-1d63-ef77bd6c6f7f","indexedAsKeyword":false,"system":true,"indexedLanguageId":"","unique":false,"name":"createDate","state":false,"businessType":"Date","readOnlyConditionExpression":""},{"indexed":false,"localized":false,"objectFieldSettings":[],"readOnly":"false","DBType":"String","label":{"en_US":"External Reference Code"},"type":"String","required":false,"externalReferenceCode":"ab0511fd-bf75-a6ee-4e88-23c670de92c2","indexedAsKeyword":false,"system":true,"indexedLanguageId":"","unique":false,"name":"externalReferenceCode","state":false,"businessType":"Text","readOnlyConditionExpression":""},{"indexed":true,"localized":false,"objectFieldSettings":[],"readOnly":"true","DBType":"Long","label":{"en_US":"ID"},"type":"Long","required":false,"externalReferenceCode":"c06571be-801d-b60b-2107-db0d9fea0046","indexedAsKeyword":true,"system":true,"indexedLanguageId":"","unique":false,"name":"id","state":false,"businessType":"LongInteger","readOnlyConditionExpression":""},{"indexed":false,"localized":false,"objectFieldSettings":[],"readOnly":"true","DBType":"Date","label":{"en_US":"Modified Date"},"type":"Date","required":false,"externalReferenceCode":"f3da9de1-9586-39df-2ebf-7a1c84825d00","indexedAsKeyword":false,"system":true,"indexedLanguageId":"","unique":false,"name":"modifiedDate","state":false,"businessType":"Date","readOnlyConditionExpression":""},{"indexed":false,"localized":false,"objectFieldSettings":[],"readOnly":"true","DBType":"String","label":{"en_US":"Status"},"type":"String","required":false,"externalReferenceCode":"c1abb432-a7a2-9ed8-6487-0fb2ba450363","indexedAsKeyword":false,"system":true,"indexedLanguageId":"","unique":false,"name":"status","state":false,"businessType":"Text","readOnlyConditionExpression":""},{"indexed":true,"localized":false,"objectFieldSettings":[{"name":"showCounter","value":false}],"readOnly":"false","DBType":"Clob","label":{"en_US":"To Address"},"type":"Clob","required":true,"externalReferenceCode":"f81824cb-4a80-c034-8ffc-ce877e1d7c7a","indexedAsKeyword":false,"system":false,"indexedLanguageId":"","unique":false,"name":"toAddress","state":false,"businessType":"LongText","readOnlyConditionExpression":""},{"indexed":true,"localized":false,"objectFieldSettings":[],"readOnly":"false","DBType":"BigDecimal","label":{"en_US":"Amount"},"type":"BigDecimal","required":true,"externalReferenceCode":"7aa6b619-7cba-9462-4364-31a4efcf3e7f","indexedAsKeyword":false,"system":false,"indexedLanguageId":"","unique":false,"name":"amount","state":false,"businessType":"PrecisionDecimal","readOnlyConditionExpression":""},{"indexed":true,"localized":false,"objectFieldSettings":[{"name":"showCounter","value":false}],"readOnly":"false","DBType":"Clob","label":{"en_US":"Signature"},"type":"Clob","required":false,"externalReferenceCode":"d44157e3-3ad6-2d80-4920-e2934e60e5e2","indexedAsKeyword":false,"system":false,"indexedLanguageId":"","unique":false,"name":"signature","state":false,"businessType":"LongText","readOnlyConditionExpression":""}],"restContextPath":"/o/c/transactions","scope":"company","portlet":true,"modifiable":true,"parameterRequired":false,"enableObjectEntryHistory":false,"titleObjectFieldName":"toAddress","objectValidationRules":[],"active":true,"defaultLanguageId":"en_US","label":{"en_US":"Transaction"},"panelCategoryKey":"applications_menu.applications.custom.apps","pluralLabel":{"en_US":"Transactions"},"objectLayouts":[],"system":false,"objectViews":[],"name":"Transaction","actions":{"permissions":{},"get":{},"update":{},"delete":{}},"status":{"label_i18n":"Approved","code":0,"label":"approved"}}